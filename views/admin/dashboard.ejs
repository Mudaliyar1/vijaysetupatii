<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <script src="https://cdn.tailwindcss.com"></script>
</head>
<body class="bg-gray-900 text-white opacity-0 transition-opacity duration-500">
    <header class="p-6 bg-gray-800 shadow-lg">
        <div class="flex justify-between items-center">
            <h1 class="text-4xl font-bold neon-text">Admin Dashboard</h1>
            <div class="text-sm text-gray-400">Logged in at: <%= new Date().toLocaleString() %></div>
            <button id="hamburger" class="md:hidden text-white">â˜°</button>
            <nav id="navbar" class="hidden md:flex space-x-4">
                <a href="/admin/dashboard" class="hover:text-blue-400">Dashboard</a>
                <a href="/admin/movies" class="hover:text-blue-400">Movies</a>
                <a href="/admin/awards" class="hover:text-blue-400">Awards</a>
                <% if (user.role === 'Admin') { %>
                    <a href="/admin/users" class="hover:text-blue-400">Users</a>
                    <a href="/admin/requests" class="hover:text-blue-400">Requests</a>
                <% } %>
                <a href="/admin/messages" class="hover:text-blue-400">Messages</a>
                <a href="/logout" class="px-4 py-2 bg-red-600 rounded hover:bg-red-700">Logout</a>
            </nav>
        </div>
    </header>
    <main class="container mx-auto px-4 py-8">
        <h1>Admin Dashboard</h1>
        <div>
            <p>Movies: <%= stats.movies %></p>
            <p>Awards: <%= stats.awards %></p>
            <p>Users: <%= stats.users %></p>
            <p>Pending Requests: <%= stats.pendingRequests %></p>
        </div>
        <nav>
            <a href="/admin/movies">Manage Movies</a>
            <a href="/admin/awards">Manage Awards</a>
            <a href="/admin/users">Manage Users</a>
            <a href="/admin/maintenance">Maintenance Mode</a>
            <a href="/admin/requests">View Requests</a>
        </nav>
    </main>
    <footer class="p-4 bg-gray-800 text-center">
        <p>&copy; 2023 Vijay Sethupathi. All rights reserved.</p>
    </footer>
    <script>
        // Show page with fade-in effect
        document.addEventListener('DOMContentLoaded', () => {
            document.body.classList.add('opacity-100');
        });
        
        const hamburger = document.getElementById('hamburger');
        const navbar = document.getElementById('navbar');
        hamburger.addEventListener('click', () => {
            navbar.classList.toggle('hidden');
        });

        async function toggleMaintenanceMode() {
            try {
                const response = await fetch('/admin/maintenance/toggle', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' }
                });
                
                if (response.ok) {
                    window.location.reload();
                } else {
                    throw new Error('Failed to toggle maintenance mode');
                }
            } catch (error) {
                alert('Error toggling maintenance mode: ' + error.message);
            }
        }

        document.getElementById('maintenanceForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const formData = new FormData(e.target);
            
            // Format duration
            const type = document.getElementById('durationType').value;
            const value = document.getElementById('durationValue').value;
            formData.set('estimatedDuration', `${value} ${type}`);
            
            try {
                const response = await fetch('/admin/maintenance/update', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(Object.fromEntries(formData))
                });
                
                if (response.ok) {
                    window.location.reload();
                }
            } catch (error) {
                console.error('Error updating maintenance settings:', error);
            }
        });

        function formatDuration(ms) {
            if (!ms) return '0 minutes';
            const hours = Math.floor(ms / (1000 * 60 * 60));
            const minutes = Math.floor((ms % (1000 * 60 * 60)) / (1000 * 60));
            return hours > 0 ? `${hours}h ${minutes}m` : `${minutes} minutes`;
        }

        function viewDetails(data) {
            try {
                const parsedData = typeof data === 'string' ? JSON.parse(data.replace(/&quot;/g, '"')) : data;
                // ...rest of viewDetails function
            } catch (error) {
                console.error('Error parsing data:', error);
            }
        }
    </script>
    <style>
        .neon-text {
            color: #0ff;
            text-shadow: 0 0 5px #0ff, 0 0 10px #0ff, 0 0 20px #0ff;
        }
    </style>
</body>
</html>
