<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Messages</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        .message-time {
            font-size: 0.7rem;
            margin-top: 2px;
        }
        .message-status {
            display: inline-block;
            margin-left: 4px;
        }
        .message-status.sent {
            color: #9CA3AF;
        }
        .message-status.delivered {
            color: #60A5FA;
        }
        .message-status.read {
            color: #34D399;
        }
    </style>
</head>
<body class="bg-gray-900 text-white">
    <%- include('partials/sidebar', { isAdmin: false }) %>

    <main class="container mx-auto px-4 py-8">
        <div class="max-w-6xl mx-auto">
            <div class="flex h-[85vh] bg-gray-800 rounded-lg shadow-xl overflow-hidden">
                <!-- Conversations List -->
                <div class="w-1/3 border-r border-gray-700 flex flex-col">
                    <div class="p-4 border-b border-gray-700 flex justify-between items-center">
                        <h2 class="text-xl font-bold">Chats</h2>
                        <div class="flex space-x-2">
                            <button class="p-2 hover:bg-gray-700 rounded-full" title="New Message">
                                <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                                          d="M12 4v16m8-8H4"/>
                                </svg>
                            </button>
                        </div>
                    </div>
                    
                    <!-- Search Box -->
                    <div class="p-4 border-b border-gray-700">
                        <div class="relative">
                            <input type="text" 
                                   placeholder="Search conversations..." 
                                   class="w-full bg-gray-700 rounded-lg pl-10 pr-4 py-2 text-sm focus:outline-none focus:ring-2 focus:ring-blue-500">
                            <svg class="w-5 h-5 absolute left-3 top-2.5 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                                      d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"/>
                            </svg>
                        </div>
                    </div>

                    <!-- Conversations List -->
                    <div class="overflow-y-auto flex-1">
                        <% conversations.forEach(conv => { %>
                            <div onclick="loadChat('<%= conv.user._id %>', '<%= conv.user.username %>')" 
                                 class="p-4 hover:bg-gray-700 cursor-pointer transition-colors border-b border-gray-700 flex items-center space-x-4">
                                <div class="w-12 h-12 bg-blue-600 rounded-full flex items-center justify-center flex-shrink-0">
                                    <%= conv.user.username.charAt(0).toUpperCase() %>
                                </div>
                                <div class="flex-1 min-w-0">
                                    <div class="flex justify-between items-baseline">
                                        <h3 class="font-semibold truncate"><%= conv.user.username %></h3>
                                        <span class="text-xs text-gray-400">
                                            <%= new Date(conv.lastMessage.createdAt).toLocaleTimeString([], {hour: '2-digit', minute:'2-digit'}) %>
                                        </span>
                                    </div>
                                    <p class="text-sm text-gray-400 truncate"><%= conv.lastMessage.message %></p>
                                </div>
                                <% if (!conv.lastMessage.read && conv.lastMessage.to.toString() === user.id) { %>
                                    <span class="w-3 h-3 bg-blue-500 rounded-full flex-shrink-0"></span>
                                <% } %>
                            </div>
                        <% }); %>
                    </div>
                </div>

                <!-- Chat Area -->
                <div class="flex-1 flex flex-col bg-gray-900">
                    <div id="chatHeader" class="p-4 border-b border-gray-700 bg-gray-800 flex items-center space-x-4">
                        <div class="w-10 h-10 bg-blue-600 rounded-full flex items-center justify-center">
                            <span class="text-lg font-bold" id="chatUserInitial"></span>
                        </div>
                        <div>
                            <h3 class="font-semibold" id="chatUsername">Select a conversation</h3>
                            <p class="text-xs text-gray-400" id="chatStatus"></p>
                        </div>
                    </div>

                    <div id="chatMessages" class="flex-1 overflow-y-auto p-4 space-y-4">
                        <!-- Messages will be loaded here -->
                    </div>

                    <form id="chatForm" class="p-4 bg-gray-800 hidden">
                        <div class="flex items-center space-x-2">
                            <div class="flex-1 relative">
                                <input type="text" id="messageInput" 
                                       class="w-full bg-gray-700 rounded-lg pl-4 pr-10 py-3 focus:outline-none focus:ring-2 focus:ring-blue-500" 
                                       placeholder="Type a message...">
                                <button type="button" class="absolute right-2 top-2.5 text-gray-400 hover:text-gray-300">
                                    <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                                              d="M14.828 14.828a4 4 0 01-5.656 0M9 10h.01M15 10h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"/>
                                    </svg>
                                </button>
                            </div>
                            <button type="submit" class="bg-blue-600 hover:bg-blue-700 p-3 rounded-lg flex-shrink-0">
                                <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" 
                                          d="M5 12h14M12 5l7 7-7 7"/>
                                </svg>
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </main>

    <script>
        let currentChatId = null;

        function loadChat(userId, username) {
            currentChatId = userId;
            
            // Update header
            document.getElementById('chatUsername').textContent = username;
            document.getElementById('chatUserInitial').textContent = username.charAt(0).toUpperCase();
            document.getElementById('chatStatus').textContent = 'online'; // You can make this dynamic
            document.getElementById('chatForm').classList.remove('hidden');
            
            // Load messages
            fetch(`/messages/${userId}`)
                .then(res => res.json())
                .then(messages => {
                    const chatMessages = document.getElementById('chatMessages');
                    chatMessages.innerHTML = messages.map(msg => {
                        const isMyMessage = msg.from !== userId;
                        const time = new Date(msg.createdAt).toLocaleTimeString([], {
                            hour: '2-digit',
                            minute: '2-digit'
                        });
                        
                        return `
                            <div class="flex ${isMyMessage ? 'justify-end' : 'justify-start'}">
                                <div class="${isMyMessage ? 'bg-blue-600' : 'bg-gray-700'} rounded-lg px-4 py-2 max-w-[70%]">
                                    <p class="text-sm">${msg.message}</p>
                                    <div class="flex items-center justify-end space-x-1">
                                        <span class="message-time text-gray-400">${time}</span>
                                        ${isMyMessage ? `
                                            <span class="message-status ${msg.read ? 'read' : 'delivered'}">
                                                ${msg.read ? '✓✓' : '✓'}
                                            </span>
                                        ` : ''}
                                    </div>
                                </div>
                            </div>
                        `;
                    }).join('');
                    chatMessages.scrollTop = chatMessages.scrollHeight;
                });
        }

        document.getElementById('chatForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            const input = document.getElementById('messageInput');
            const message = input.value.trim();
            
            if (message && currentChatId) {
                try {
                    const response = await fetch('/messages/send', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            to: currentChatId,
                            message: message
                        })
                    });

                    if (response.ok) {
                        input.value = '';
                        loadChat(currentChatId);
                    }
                } catch (error) {
                    console.error('Error sending message:', error);
                }
            }
        });

        // Update messages every 10 seconds if chat is open
        setInterval(() => {
            if (currentChatId) {
                loadChat(currentChatId);
            }
        }, 10000);
    </script>
</body>
</html>